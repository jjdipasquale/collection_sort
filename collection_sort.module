<?php

/**
 * @file
 * Hook implementations for Vassar.
 */

//define('COLLECTION_SORT_FULLTEXT_PATH', 'collection_sort/bookreader_fulltext');

// Includes functions to create sort blocks.
require_once dirname(__FILE__) . '/includes/blocks.inc';

/**
 * Implements hook_islandora_basic_collection_query_alter().
 */

function collection_sort_islandora_basic_collection_query_alter(array &$params) {
   $sort = '?title ?date';
   $url = $_SERVER['REQUEST_URI'];

   if (stristr($url,'sortby=date'))
        $sort = '?date ?title';

   //$params['vars'] =  '?object ?title ?date'; // jd added ?date
   $params['vars'] =  '*'; 
   $params['order_by'] = $sort; // jd added ?date

   $object = $params['object'];

// testing this out
  $query = <<<EOQ
SELECT DISTINCT !vars
FROM <#ri>
WHERE {
  !statements .
  !filters
}
EOQ;

  $filters = array();
  //foreach (module_invoke_all('islandora_basic_collection_get_query_filters') as $filter) {
 foreach(module_invoke_all('islandora_basic_collection_get_query_filters', $type = 'view') as $filter) {
    $filters[] = "FILTER($filter)";
  }

  //$statements = collection_sort_islandora_basic_collection_get_query_statements($type = 'view');
  $statements = implode(" ", collection_sort_islandora_basic_collection_get_query_statements($type = 'view'));
  $query = format_string($query, array(
    '!statements' => $statements,
    '!filters' => implode(' ', $filters),
    '!vars' => $params['vars'],
  ));

  $query = format_string($query, array(
    '!pid' => $object->id,
    '!model' => $params['model'],
  ));

  if ($params['order_by']) {
    $query .= <<<EOQO
ORDER BY {$params['order_by']}
EOQO;
  }

//echo $query;
$params['query'] = $query;
return $params;
} // end FUNCTION collection_sort_islandora_basic_collection_query_alter

/**
 * Implements hook_islandora_basic_collection_get_query_statements().
 */
// jd added date
function collection_sort_islandora_basic_collection_get_query_statements($type = 'view') {
//function collection_sort_islandora_basic_collection_get_query_statements() {
/*
 return <<<EOQ
  ?object ?collection_predicate <info:fedora/!pid> ;
          <fedora-model:label> ?title ;
          <fedora-model:hasModel> !model ;
          <fedora-model:state> <fedora-model:Active>
          OPTIONAL {?object <dc:date> ?date } 
EOQ;
*/


// ADDING ADDITIONAL OPTIONAL STATEMENTS TO COVER XACML POLICIES
  $to_return = array();

  $to_return[] = <<<EOQ
?object ?collection_predicate <info:fedora/!pid> ;
        <fedora-model:label> ?title ;
        <fedora-model:ownerId> ?owner ;
        <fedora-view:lastModifiedDate> ?date_modified ;
        <fedora-model:hasModel> !model
        OPTIONAL {?object <dc:date> ?date } 
        OPTIONAL {?object <fedora-model:isManagableByRole> ?role }
        OPTIONAL {?object <fedora-model:isManageableByUser> ?user }
EOQ;

  if ($type == 'view') {
    $to_return[] = '?object <fedora-model:state> <fedora-model:Active>';
  }
  return $to_return;

} // end FUNCTION collection_sort_islandora_basic_collection_get_query_statements

